service: sls-py-shutdown
frameworkVersion: '2 || 3'

useDotenv: true
provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-west-2'}
  # deploymentBucket:
  #   name: all-serverless-stack-${opt:stage}-${opt:region}
#  lambdaHashingVersion: 20201221
  iam:
    role:
      statements:
        # - Effect: "Allow"
        #   Action:
        #     - "s3:ListBucket"
        #   Resource: 
        #     - "arn:aws:s3:::${file(config/${self:provider.stage}.yml):productLoaderBucket}"
        - Effect: "Allow"
          Action:
            - "ec2:*"
          Resource:
            - "*"
        - Effect: "Allow"
          Action:
            - "rds:*"
          Resource:
            - "*"
  # environment:
  #   VAR1: ${file(config/${self:provider.stage}.yml):var1}
  stackTags:
    Area: "AunaDigital"
    CostCenter: "5010211005"
    Environment: "${self:provider.stage}"
    Region: "${self:provider.region}"
    # Environment: "qa"
    Project: "saleorBackend"
    Team: "PODFAR"

package:
  individually: true
  include:
    - src/**
  exclude:
    - node_modules/**
    - venv/**
  # patterns:
  #   - '!**/**'
  #   - src/**
  #   # - '!exclude-me.py'
  #   # - '!exclude-me-dir/**'
  #   # - include-me.py
  #   # - include-me-dir/**
  # excludeDevDependencies: true


functions:
  shutdown:
    handler: src.handler.shutdown
    events:
      # cron(min, hour, day-of-month, month, day-of-week, Year)
      # cron(0-59, 0-23, 1-31, 1-12, 0-6)
      - schedule:
          rate: cron(00 01 ? * * 1-5)
    timeout: 60 # time in seconds (15min)
      # - cloudwatchLog: '/aws/lambda/hello'
  startUp:
    handler: src.handler.startUp
    events:
      # cron(min, hour, day-of-month, month, day-of-week, Year)
      # cron(0-59, 0-23, 1-31, 1-12, 0-6)
      - schedule:
          rate: cron(00 12 ? * * 1-5)
    timeout: 60 # time in seconds (15min)
      # - cloudwatchLog: '/aws/lambda/hello'
  # test:
  #   handler: src.hand.hello
  #   events:
  #     # cron(min, hour, day-of-month, month, day-of-week, Year)
  #     # cron(0-59, 0-23, 1-31, 1-12, 0-6)
  #     - schedule:
  #         rate: cron(30 21 ? * * *)
  #   timeout: 60 # time in seconds (15min)
  #     # - cloudwatchLog: '/aws/lambda/hello'

plugins:
  - serverless-python-requirements
  - serverless-dotenv-plugin
  - serverless-plugin-resource-tagging

custom:
  pythonRequirements:
    dockerizePip: true
    noDeploy:
      - boto3
      - botocore